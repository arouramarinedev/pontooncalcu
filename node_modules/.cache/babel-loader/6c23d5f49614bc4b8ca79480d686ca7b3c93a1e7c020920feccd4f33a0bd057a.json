{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\pontoocal\\\\src\\\\components\\\\Landing\\\\ScrollDown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScrollDownButton() {\n  _s();\n  const [showButton, setShowButton] = useState(true);\n\n  // Function to handle the button click and scroll to the next section\n  const handleClick = () => {\n    const targetSection = document.getElementById('my-section');\n    targetSection.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  // Function to show/hide the button based on the user's scroll position\n  const handleScroll = () => {\n    if (window.pageYOffset > 500) {\n      setShowButton(true);\n    } else {\n      setShowButton(false);\n    }\n  };\n\n  // Add an event listener to update the button visibility on scroll\n  window.addEventListener('scroll', handleScroll);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scroll-down-button\",\n    children: showButton && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Scroll Down\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(ScrollDownButton, \"htdk046snjIlp+1hLii+8rg0vFc=\");\n_c = ScrollDownButton;\nexport default ScrollDownButton;\nvar _c;\n$RefreshReg$(_c, \"ScrollDownButton\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ScrollDownButton","_s","showButton","setShowButton","handleClick","targetSection","document","getElementById","scrollIntoView","behavior","handleScroll","window","pageYOffset","addEventListener","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/pontoocal/src/components/Landing/ScrollDown.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction ScrollDownButton() {\r\n  const [showButton, setShowButton] = useState(true);\r\n\r\n  // Function to handle the button click and scroll to the next section\r\n  const handleClick = () => {\r\n    const targetSection = document.getElementById('my-section');\r\n    targetSection.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n  // Function to show/hide the button based on the user's scroll position\r\n  const handleScroll = () => {\r\n    if (window.pageYOffset > 500) {\r\n      setShowButton(true);\r\n    } else {\r\n      setShowButton(false);\r\n    }\r\n  };\r\n\r\n  // Add an event listener to update the button visibility on scroll\r\n  window.addEventListener('scroll', handleScroll);\r\n\r\n  return (\r\n    <div className=\"scroll-down-button\">\r\n      {showButton && (\r\n        <button onClick={handleClick}>\r\n          Scroll Down\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScrollDownButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACA,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;IAC3DF,aAAa,CAACG,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EACtD,CAAC;EACD;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIC,MAAM,CAACC,WAAW,GAAG,GAAG,EAAE;MAC5BT,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACLA,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;;EAED;EACAQ,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;EAE/C,oBACEX,OAAA;IAAKe,SAAS,EAAC,oBAAoB;IAAAC,QAAA,EAChCb,UAAU,iBACTH,OAAA;MAAQiB,OAAO,EAAEZ,WAAY;MAAAW,QAAA,EAAC;IAE9B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV;AAACnB,EAAA,CA7BQD,gBAAgB;AAAAqB,EAAA,GAAhBrB,gBAAgB;AA+BzB,eAAeA,gBAAgB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}